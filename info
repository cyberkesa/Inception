Проект Inception
Цель: расширение знаний в области
системного администрирования с помощью Docker

Виртуализация нескольких образов Docker,
создав их на новой персональной виртуальной машине
✅ Проект заключается в настройке небольшой
инфраструктуры, сост. из различных
служб по определенным правилам.

Весь проект должент быть выполнен на виртуальной	
машине.


✅ Структура проекта: ✅
Все файлы помещаются в srcs
Makefile и yaml в корне
https://habr.com/ru/company/ruvds/blog/486682/
- Makefile
- srcs
	- docker-compose.yaml
	- wordpress
	- mariadb
	- nginx
	

✅ Docker Compose — это средство, разработанное для помощи
в определении и совместном использовании многоконтейнерных приложений.
С помощью средства Compose можно создать файл YAML для определения
служб и с помощью одной команды запускать и останавливать все, что нужно.

✅ YAML (акроним англ.  «Yet Another Markup Language»
— «Ещё один язык разметки», позже —
рекурсивный акроним англ. «YAML Ain't Markup Language»
— «YAML — не язык разметки») — «дружественный» формат
сериализации данных, концептуально близкий к языкам разметки,
но ориентированный на удобство ввода-вывода типичных структур
данных многих языков программирования.



✅ Про образы Dockerfile: ✅
Вы также должны написать свои собственные файлы Dockerfile,
по одному для каждой службы. Dockerfiles должен вызываться
в вашем docker-compose.yaml вашим Makefile
//поясняю, контейнеры можно собирать из готовых образов,
//но нам по сабджекту нужно написать свои. А в каждом сервисе
//из YAML, мы указываем ОБРАЗ или
//image: (готовый с докерхаба) или build: (путь)
Это означает, что вы должны сами создавать образы Docker
для своего проекта. Затем запрещается извлекать готовые
образы Docker, а также использовать такие службы,
как DockerHub (Alpine / Debian исключены из этого правила).
У каждого образа Docker должно быть то же имя,
что и у соответствующей службы.
Каждая служба (service) должна работать в выделенном контейнере.
✅ По соображениям производительности контейнеры
должны быть созданы либо из предпоследней стабильной
версии Alpine Linux, либо из Debian Buster




Затем вам необходимо НАСТРОИТЬ:
• Контейнер Docker, NGINX
содержащий только NGINX с TLSv1.2 или TLSv1.3.
//TLS (англ. transport layer security
— Протокол защиты транспортного уровня)
речь идет о создании сертификата openssl


• Контейнер Docker, WORDPRESS
содержащий WordPress + php-fpm (он должен быть установлен и настроен).

• Контейнер Docker, DB
содержащий MariaDB.

VOLUMES: https://server-gu.ru/docker-compose-volumes/
volumes:
• Том, содержащий вашу базу данных WordPress. (том = volumes)
//речь идет о volumes для db (db == mysql == mariadb)
—  /home/site/db:/var/lib/mysql для базы данных

• Второй том, содержащий файлы вашего веб-сайта WordPress.
//речь идет о volumes для WordPress (service, == web == wp)
— /home/site:/var/www/html для сайта

• Докер-сеть, которая
устанавливает соединение между вашими контейнерами.

Ваши контейнеры должны перезапускаться в случае сбоя.
//делается в одну строчку: restart: always НАВЕРНОЕ


Насчет виртуальной машины:
Контейнер Docker - это не виртуальная машина.

Таким образом, это НЕ рекомендуется использовать
любой хакерский патч, основанный на 'tail -f' и т. д.
при попытке запустить его. Читайте о том,
как работают демоны и есть ли в этом
хорошая идея использовать их или нет.


Еще немного сложностей:

Конечно, использование network: host или --link запрещено.
//речь идет о networks: в yaml

• В вашей базе данных WordPress должно
быть два пользователя, один из которых
является администратором.
Имя пользователя администратора
не может содержать admin / Admin или admin / Administrator
(например, admin, administrator, Administrator, admin-123 и т. Д.).

Чтобы упростить задачу,
вы должны настроить свое доменное
имя так, чтобы оно указывало на ваш локальный IP-адрес.

Это доменное имя должно быть login.42.fr.
Опять же, вы должны использовать свой собственный логин.

Например, если ваш логин - wil, то wil.42.fr будет
перенаправлять на IP-адрес, указывающий на веб-сайт wil.

Ваши тома будут доступны в папке / home / login / data на
хост-машина с использованием Docker.
Разумеется, нужно сменить логин с твоим.

Последний тег запрещен.
В ваших файлах Dockerfiles не должно быть пароля.

Обязательно использовать переменные среды.
Также настоятельно рекомендуется использовать файл .env для хранения
переменные среды. Файл .env должен находиться в корне.
каталога srcs.

Ваш контейнер NGINX должен быть единственной точкой входа в ваш
инфраструктура только через порт 443, используя TLSv1.2 или TLSv1.3
протокол.